@use "./CustomeLibrary/mainLibrary";

.to-do-container {
  width: 30rem;
  margin: auto;
  position: absolute;
  left: 0;
  right: 0;
  top: 10vh;
}

.filterCon {
  display: flex;
  div {
    font-weight: 400;
    &:hover {
      font-weight: 700;
    }
    &.clicked {
      color: var(--blue);
      font-weight: 700;
    }
  }
}
.filterCon2 {
  display: none;
  div {
    &:hover {
      font-weight: 700;
    }
    &.clicked {
      color: var(--blue);
      font-weight: 700;
    }
  }
}

@media screen and (max-width: 400px) {
  .to-do-container {
    width: 90%;
  }
  .filterCon {
    display: none;
  }
  .filterCon2 {
    display: flex;
    margin-top: 1.5rem;
    background-color: var(--white);
    padding: 0.8rem 2.5rem;
  }
}

.circle {
  width: 1.3rem;
  height: 1.3rem;
  border: var(--secondaryColor) solid 1px;
  border-radius: 50%;
  &:hover {
    background-image: mainLibrary.$gradient;
    position: relative;
    > div {
      background-color: var(--white);
      border-radius: 50%;
      width: 90%;
      height: 90%;
      @include mainLibrary.center-h-v();
    }
  }
}

.task-con {
  background: var(--white);
  input {
    background: transparent;
    border: none;
    outline: none;
  }
}

.taskCon2 {
  background: var(--white);
  border-radius: 0;
  cursor: pointer !important;
}

.completed {
  text-decoration: line-through;
  color: var(--secondaryColor);
}
.completedCircle {
  background-image: var(--gradient);
  position: relative;
  border: none;
  &::before {
    content: url("../Images/icon-check.svg");
    @include mainLibrary.center-h-v;
  }
}

.tasksContainer {
  border-radius: mainLibrary.$radius;
  overflow: hidden;
  div {
    margin-bottom: 1px;
  }
}

picture {
  position: absolute;
}

h1 {
  letter-spacing: 1.3rem;
  color: #ffffff;
  font-size: 2rem;
}

.icon {
  width: 1.6rem;
  height: 1.6rem;
}

@mixin delete() {
  content: "";
  width: 100%;
  height: 1px;
  background-color: var(--mainColor);
  @include mainLibrary.center-h-v();
}
.delete {
  width: 21px;
  height: 21px;
  position: relative;
  margin-left: auto;
  opacity: 0.7;
  &:hover {
    opacity: 1;
  }
  &::before {
    @include delete();
    transform: translate(-50%, -50%) rotate(45deg);
  }
  &::after {
    @include delete();

    transform: translate(-50%, -50%) rotate(-45deg);
  }
}
